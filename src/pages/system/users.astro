---
import { ParamsSchema, DefaultParamsSchema } from '@/types/Users'
import MainLayout from '@/layouts/MainLayout.astro';
import UsersPage from '@/components/pages/system/UsersPage.vue';

const hasAccess = Astro.locals.permissions?.includes('010100'); if (!hasAccess) { return Astro.redirect("/") }

const params = Astro.url.searchParams;
// When no queryparams set default params and redirect. Else, check if valid and proceed; or redirect to fixed url on error
if (params.toString() === '') {
  Object.entries(DefaultParamsSchema.parse({})).forEach(([key, value]) => params.set(key, value.toString()));
  return Astro.redirect(Astro.url.href);
} else if (ParamsSchema.safeParse(Object.fromEntries(params.entries())).error) {
  Object.entries(DefaultParamsSchema.parse(Object.fromEntries(params.entries()))).forEach(([key, value]) => params.set(key, value.toString()));
  return Astro.redirect(Astro.url.href);
}

const sort = ParamsSchema.parse(Object.fromEntries(params.entries())).sort;
const page = ParamsSchema.parse(Object.fromEntries(params.entries())).page;
const apiOrigin = Astro.url.origin;
const res = await fetch(`${apiOrigin}/api/system/users?sort=${sort}&page=${page}`);
const response = await res.json();
---

<MainLayout>
  <UsersPage
    client:load
    data={response} />
</MainLayout>
