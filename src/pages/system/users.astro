---
import type { DataResponse } from '@/types/Users';
import { ParamsSchema, DefaultParamsSchema } from '@/types/Users'
import MainLayout from '@/layouts/MainLayout.astro';
import UsersPage from '@/components/pages/system/UsersPage.vue';

const hasAccess = Astro.locals.permissions?.includes('010100'); if (!hasAccess) { return Astro.redirect("/") }

const params = Astro.url.searchParams;
const isURLSearchParamsValid = ParamsSchema.safeParse(Object.fromEntries(params.entries())).success;
const filters = isURLSearchParamsValid ? ParamsSchema.parse(Object.fromEntries(params.entries())) : DefaultParamsSchema.parse({});
if (!isURLSearchParamsValid) {
  Object.entries(filters).forEach(([key, value]) => value && params.set(key, value.toString()));
  return Astro.redirect(Astro.url.href);
}

const searchParams = new URLSearchParams(Object.fromEntries(Object.entries(filters).filter(([, value]) => value != null).map(([key, value]) => [key, String(value)])));
const apiOrigin = Astro.url.origin;
const url = new URL(`${apiOrigin}/api/system/users?${searchParams.toString()}`);
const res = await fetch(url.toString());
const response: DataResponse = await res.json();
---

<MainLayout>
  <UsersPage
    client:load
    filters={filters}
    data={response} />
</MainLayout>
